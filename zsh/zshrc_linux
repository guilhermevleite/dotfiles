# Has to be on top, check if tmux is NOT running, and runs it
if [ "$TMUX" = "" ]; then tmux; fi
# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# To change ubuntu terminal themes: https://github.com/Mayccoll/Gogh

# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Tmux complaining about color
#export TERM="xterm-256color"

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
ZSH_THEME="powerlevel10k/powerlevel10k"

#eval `dircolors /home/leite/.dir_colors/`
#
# Powerlevel colors

DEFAULT_USER=`whoami`

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in ~/.oh-my-zsh/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
CASE_SENSITIVE="false"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in ~/.oh-my-zsh/plugins/*
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/rsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

alias vim='lvim'
alias ll='ls -lh'
#alias grep='grep --color'
#alias foxit='/home/leite/Foxit/FoxitReader'
# alias vim='/home/leite/Applications/nvim.appimage'
#alias jpt=jupyter notebook

# Google tasks CLI: https://github.com/jrupac/tasky

#alias tasks=''
# Trello CLI aliases
#alias trello='/home/leite/trello-cli/bin/trello'
#alias tadd='trello add-card -b Universe -l Stuff -q bottom'
#alias tnext="trello show-cards -l 'Next Action' -i -b"
#alias tlist='trello show-boards'

#alias sync='sudo systemctl start resilio-sync'

#alias lua='lua5.3'

# Opens evince with & at the end, so terminal still functional,
# and dumps any WARNING msgs to dev/null.
avince(){
    echo "$1"
    evince "$1" 1>/dev/null 2>/dev/null&
}

# Markdown preview
alias md='grip --quiet -b&'
# Opens latexmk preview with proper flag
alias latex='latexmk -pvc -f -pdf'
# Lists folders size
alias lt='du -sh * | sort -h'
# Count files ignoring folders, but count subfiles too
alias count='find . -type f | wc -l'
# Use this instead of rm, it just moves to trash, still
# recoverable
alias rmt='gio trash '
alias drive='google-drive-ocamlfuse ~/Drive/'
alias undrive='fusermount -u ~/Drive/'
alias zotero='zotero 1>/dev/null 2>/dev/null&'
alias godot='/home/leite/Applications/Godot_v4.1.1-stable_linux.x86_64'
alias internet='systemctl restart NetworkManager'
o(){
    if [[ $1 == *.md ]]
    then
        /home/leite/.local/bin/grip -b $1
    else
        xdg-open $1
    fi
}
alias start_rsl='systemctl start resilio-sync'
alias stop_rsl='systemctl stop resilio-sync'
#alias mendeley='~/Applications/mendeley-reference-manager-2.76.0-x86_64.AppImage 1>/dev/null 2>/dev/null&'

# Git aliases
gpush()
{
    git add .
    git commit -m $1
    git push
}

thelp(){
    echo 'tls <board_name>: To print the Next Action list'
    echo 'tdone <card_id>: To move card into Daily Done'
}

tls(){
    trello show-cards -b $1 -l "Next Action"
}

tdone(){
    trello move-card $1 5c6ada926d277545096f7341
}

tadd(){
    trello add-card -b "Universe" -l "Stuff" "$1" "$2"
}

ds(){
    cat $1/config.yml | grep dataset
}

ydown(){
    pytube --itag 139 -t ~/Music/ $2

    if [ "$1" = "108060" ]; then
        echo "1080 60fps"
        pytube --itag 299 -t ~/Videos/ $2

    elif [ "$1" = "1080" ]; then
        echo "1080"
        pytube --itag 137 -t ~/Videos/ $2

    elif [ "$1" = "72060" ]; then
        echo "720 60fps"
        pytube --itag 298 -t ~/Videos/ $2

    elif [ "$1" = "720" ]; then
        echo "720"
        pytube --itag 136 -t ~/Videos/ $2

    elif [ "$1" = "480" ]; then
        echo "480"
        pytube --itag 135 -t ~/Videos/ $2

    else
        echo "144"
        pytube --itag 160 -t ~/Videos/ $2
    fi
}

ymerg(){
    ffmpeg -i ~/Videos/$1 -i ~/Music/$1 -c copy ~/Videos/done/$1.mkv
}

# Time track command
TIME_TRACK_FILE=~/sync/lenovo/time_track.txt
track()
{
    if [ $1 = "ls" ]; then
        cat $TIME_TRACK_FILE

    elif [ $1 = "rm" ]; then
        sed -i '$ d' $TIME_TRACK_FILE

    elif [ $1 = "stop" ]; then
        text="STOP $2 $(date +"%Y_%m_%d %H:%M")"
        echo $text >> $TIME_TRACK_FILE

    elif [ $1 = "help" ]; then
        echo "File: "$TIME_TRACK_FILE
        echo "ls, rm, stop"

    else
        text="START $1 $(date +"%Y_%m_%d %H:%M")"
        echo "Added: "$text
        echo $text >> $TIME_TRACK_FILE
    fi
}

source ~/.fonts/*.sh

# Python VirtualEnv
# export WORKON_HOME=$HOME/.virtualenvs                                         
# export VIRTUALENVWRAPPER_PYTHON=/usr/bin/python3                              
# export PYTHONPATH=$PYTHONPATH=/home/leite/workspace/fall/saliency_extractor/models/research:/home/leite/workspace/fall/saliency_extractor/models/research/slim
# source /usr/local/bin/virtualenvwrapper.sh

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/home/leite/miniconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/home/leite/miniconda3/etc/profile.d/conda.sh" ]; then
        . "/home/leite/miniconda3/etc/profile.d/conda.sh"
    else
        export PATH="/home/leite/miniconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

PATH=${PATH}:/home/leite/.dotnet/tools
export PATH

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# gnome-control-center to open settings

# fnm
export PATH="/home/leite/.local/share/fnm:$PATH"
eval "`fnm env`"

# fnm
export PATH="/home/leite/.local/share/fnm:$PATH"
eval "`fnm env`"
